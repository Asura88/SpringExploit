package main

import (
	"fmt"
	"github.com/panjf2000/ants/v2"
	"sync"
	"time"
)

func Task() {
	fmt.Println(fmt.Sprintf("%d  %s", time.Now().Nanosecond(), "Hello, World!"))
	time.Sleep(time.Second * 2)

}

func main() {
	defer ants.Release()
	pool, err := ants.NewPool(50)
	if err != nil {
		fmt.Println(err)
		return
	}
	var wg sync.WaitGroup

	task := func() {
		Task()
		wg.Done()
	}

	for i := 0; i < 100; i++ {
		wg.Add(1)
		fmt.Println(fmt.Sprintf("%d  %s", i, "before submit"))
		_ = pool.Submit(task)
	}
	wg.Wait()

}
