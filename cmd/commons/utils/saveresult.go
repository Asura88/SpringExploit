package utils

import (
	log "github.com/sirupsen/logrus"
	"os"
	"path/filepath"
)

// SaveToFile 保存结果到目标文件
func SaveToFile(content string, file string) error {
	//打开文件，没有则创建，有则append内容
	//创建目录
	path := filepath.Dir(file)
	err := Mkdir(path)
	if err != nil {
		return err
	}
	w1, error := os.OpenFile(file, os.O_RDWR|os.O_CREATE|os.O_APPEND, 0644)
	checkError(error)
	_, err1 := w1.Write([]byte(content + "\n"))
	checkError(err1)
	errC := w1.Close()
	checkError(errC)
	return nil
}

//写入文件
func writeStringToFile(filepath, content string) {
	//打开文件，没有则创建，有则append内容
	w1, error := os.OpenFile(filepath, os.O_RDWR|os.O_CREATE|os.O_APPEND, 0644)
	checkError(error)

	_, err1 := w1.Write([]byte(content + "\n"))
	checkError(err1)

	errC := w1.Close()
	checkError(errC)
}

//写入文件
func writeBytesToFile(filepath string, content []byte) {
	//打开文件，没有此文件则创建文件，将写入的内容append进去
	w1, error := os.OpenFile(filepath, os.O_RDWR|os.O_CREATE|os.O_APPEND, 0644)
	checkError(error)

	_, err1 := w1.Write(content)
	checkError(err1)

	errC := w1.Close()
	checkError(errC)
}

func checkError(err error) {
	if err != nil {
		log.Error("文件写入失败，错误信息：", err)
	}
}
