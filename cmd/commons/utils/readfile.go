package utils

import (
	"bufio"
	log "github.com/sirupsen/logrus"
	"os"
	"os/exec"
	"path/filepath"
	"strings"
)

func ReadFile(path string) (urls []string, err error) {
	file, err := os.Open(path)
	if err != nil {
		log.Error("An error occurred on opening the inputfile\n" +
			"Does the file exist?\n" +
			"Have you got acces to it?\n")
		return nil, err
	}
	defer func(file *os.File) {
		err := file.Close()
		if err != nil {
			log.Error("An error occurred on closing the inputfile\n" +
				"Does the file exist?\n" +
				"Have you got acces to it?\n")
		}
	}(file)
	iReader := bufio.NewReader(file)
	var lins []string
	for {
		str, err := iReader.ReadString('\n')
		if err != nil {
			return lins, err // error or EOF
		}
		str = str[:len(str)-2]
		log.Infoln("The url is : ", str)
		lins = append(lins, str)
	}
	return lins, nil
}

func getpath() string {
	file, _ := exec.LookPath(os.Args[0])
	path1, _ := filepath.Abs(file)
	filename := filepath.Dir(path1)
	var path string
	if strings.Contains(filename, "/") {
		tmp := strings.Split(filename, `/`)
		tmp[len(tmp)-1] = ``
		path = strings.Join(tmp, `/`)
	} else if strings.Contains(filename, `\`) {
		tmp := strings.Split(filename, `\`)
		tmp[len(tmp)-1] = ``
		path = strings.Join(tmp, `\`)
	}
	return path
}
