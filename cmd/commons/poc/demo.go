package poc

import (
	"github.com/SummerSec/SpringExploit/cmd/commons/utils"
	"github.com/fatih/structs"
	log "github.com/sirupsen/logrus"
)

type Demo struct{}

func (d Demo) SendPoc(target string, hashmap map[string]interface{}) {

	log.Debugf("[+] Running default poc")
	reqinfo := NewReqInfo()
	reqmap := structs.Map(reqinfo)
	// TODO 每次传入的url 都是标准的 http(s)://host:port/path
	// 可以使用 url.Parse 来解析获取 host 和 port
	// for example:
	//result, err := url.Parse(target)
	//if err != nil {
	//	log.Debugln("[-] url parse error")
	//	log.Errorf("[-] url parse error: %s", err)
	//	return
	//}
	//target = result.Scheme + "://" + result.Host + result.Port() + "/" + result.Path

	reqmap["url"] = target
	//for k, v := range hashmap {
	//	log.Debugln("key: ", k, " value: ", v)
	//}

	reqmap["method"] = "GET"
	// 默认随机UA 不需要设置
	reqmap["headers"] = map[string]string{
		"User-Agent": utils.GetUA(),
	}
	reqmap["body"] = ""
	reqmap["timeout"] = hashmap["Timeout"].(int)
	reqmap["retry"] = hashmap["Retry"].(int)
	reqmap["proxy"] = hashmap["Proxy"].(string)
	reqmap["mode"] = hashmap["Mode"].(int)

	utils.Send(reqmap)

}

func (d Demo) init() {
	log.Info("[+] Registering Demo poc")

}
