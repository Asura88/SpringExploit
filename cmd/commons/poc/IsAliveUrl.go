package poc

import (
	req2 "github.com/SummerSec/SpringExploit/cmd/commons/req"
	"github.com/SummerSec/SpringExploit/cmd/commons/utils"
	"github.com/imroc/req/v3"
	log "github.com/sirupsen/logrus"
)

type IsAliveUrl struct{}

func (t IsAliveUrl) SendPoc(target string, hashmap map[string]interface{}) {
	//reqmap := req2.NewReqInfoToMap(hashmap)
	//reqmap["url"] = target
	//reqmap["method"] = "HEAD"
	//reqmap["timeout"] = "3"
	//headers := map[string]string{
	//	"User-Agent": utils.GetUA(),
	//}
	//reqmap["headers"] = headers
	//resp := utils.Send(reqmap)
	//if t.CheckExp(resp,target,hashmap) {
	//	log.Infof("[+] %s is alive", target)
	//}

}

func (t IsAliveUrl) SaveResult(target string, file string) {
	// nothing to do
}

func (t IsAliveUrl) CheckExp(resp *req.Response, target string, hashmap map[string]interface{}) bool {
	reqmap := req2.NewReqInfoToMap(hashmap)
	reqmap["url"] = target
	reqmap["method"] = "HEAD"
	reqmap["redirect"] = true
	headers := map[string]string{
		"User-Agent": utils.GetUA(),
	}
	reqmap["headers"] = headers
	resp2 := utils.Send(reqmap)
	log.Debug(resp2.Dump())
	if resp2.Dump() == "" {
		return false
	}
	return true
}
